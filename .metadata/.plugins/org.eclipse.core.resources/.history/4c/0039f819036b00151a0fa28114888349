
import java.util.LinkedList;

public class Population {

	private LinkedList<Member> members;

	public Population(int size, int puzz, LinkedList<String> vals, int goal) {
		members = new LinkedList<Member>();

		// make the list of members
		for (int i = 0; i < size; i++) {
			Member newMember = new Member();
			members.add(newMember);
		}
	}
	
	// second constructor for non-initial populations
	public Population() {
		this.members = new LinkedList<Member>();
	}
	
	// returns the member at the given index
	public Member getMember(int i) {
		return members.get(i);
	}

	// removes the member at the given index
	public void removeMember(int i) {
		members.remove(i);
	}
	
	// returns the size of population
	public int getSize() {
		return members.size();
	}

	// replaces the member at index i with given member
	public void saveMember(Member m) {
		members.add(m);
	}
	
	// Gets fittest member
	public Member getFittest() {

		int bestInd = 0;
		int best = members.get(0).getFitness();

		// look at the fitness of each member, and grab the member with the
		// highest fitness
		for (int i = 0; i < getSize(); i++) {
			if (members.get(i).getFitness() > best) {
				bestInd = i;
//				System.out.println("the best fitness in pop: " + members.get(i).getFitness());
				best = members.get(bestInd).getFitness();
//				System.out.println("Checking mostFitMember: \n" + best);
			}
		}
		return members.get(bestInd);
	}


}
