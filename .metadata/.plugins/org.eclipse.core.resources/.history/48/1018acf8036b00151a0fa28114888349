
import java.util.Arrays;
import java.util.LinkedList;
import java.util.concurrent.ThreadLocalRandom;

public class Member  {

	private Boolean[] genes;
	private LinkedList<String> vals;
	private int goal;

	// constructor for children
	public Member() {

	}

	// constructor for new members
	public Member(LinkedList<String> v, int g) {

		this.vals = v;
		this.goal = g;
		genes = new Boolean[this.vals.size()];

		// init the genes array to all false
		Arrays.fill(genes, Boolean.FALSE);

		// create the gene a random gene sequence for this member using the
		// possible values
		generateGenes();
	}
	
	
	//get the vals used for this member
	public LinkedList<String> getVals(){
		return this.vals;
	}

	// get the fitness of the individual
	// for puzzle 1, the fitness is the sum of the numbers
	public int getFitness() {
		int fit = 0;
		// add up all of the genes in the member
		for (int i = 0; i < getSize(); i++) {
			// if this member has this gene, add it to the fitnes
			if (genes[i]) {
				int n = Integer.parseInt(this.vals.get(i));
				fit = fit + n;
			}
		}

		// return 0 if the total exceeds the goal, because it is unfit
		if (fit > this.goal) {
			// System.out.println("got to an unfit number: " + fit);
			return 0;
		} else {
			return fit;
		}
	}

	// get a string containing the gene value at the given index
	public String getGene(int i) {
		return genes[i].toString();
	}

	// set the gene value at the given index to the given value
	public void setGene(int i, String val) {
		if (val.equals("true")) {
			genes[i] = true;
		} else {
			genes[i] = false;
		}
	}

	// get the number of values in the member
	public int getSize() {
		return this.vals.size();
	}

	// takes the possible values and turns them into a "gene sequence"
	private void generateGenes() {

		// randomly assigns true or false to each bit value
		for (int i = 0; i < this.vals.size(); i++) {

			int rand = ThreadLocalRandom.current().nextInt(0, 2);

			if (rand == 1) {
				genes[i] = true;
			}
		}

	}

	@Override
	public String toString() {
		String ret = "Gene sequence: ";
		for (int i = 0; i < genes.length; i++) {
			if (genes[i]) {
				ret = ret + this.vals.get(i) + ", ";
			}
		}
		ret = ret + " Fitness: " + getFitness();
		return ret;

	}

}
